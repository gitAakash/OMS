//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MailGun.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICTDPIService")]
    public interface ICTDPIService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDPIService/ProcessMessages", ReplyAction="http://tempuri.org/ICTDPIService/ProcessMessagesResponse")]
        int ProcessMessages(string sendar, string recipient, string subject, string htmlBody, string strippedHtml, string messageURL, string strippedText, string attachments, System.DateTime sentDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDPIService/ProcessMessages", ReplyAction="http://tempuri.org/ICTDPIService/ProcessMessagesResponse")]
        System.Threading.Tasks.Task<int> ProcessMessagesAsync(string sendar, string recipient, string subject, string htmlBody, string strippedHtml, string messageURL, string strippedText, string attachments, System.DateTime sentDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDPIService/DeletedMail", ReplyAction="http://tempuri.org/ICTDPIService/DeletedMailResponse")]
        bool DeletedMail(string MailUid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDPIService/DeletedMail", ReplyAction="http://tempuri.org/ICTDPIService/DeletedMailResponse")]
        System.Threading.Tasks.Task<bool> DeletedMailAsync(string MailUid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDPIService/TestMethod", ReplyAction="http://tempuri.org/ICTDPIService/TestMethodResponse")]
        void TestMethod();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICTDPIService/TestMethod", ReplyAction="http://tempuri.org/ICTDPIService/TestMethodResponse")]
        System.Threading.Tasks.Task TestMethodAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICTDPIServiceChannel : MailGun.ServiceReference1.ICTDPIService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CTDPIServiceClient : System.ServiceModel.ClientBase<MailGun.ServiceReference1.ICTDPIService>, MailGun.ServiceReference1.ICTDPIService {
        
        public CTDPIServiceClient() {
        }
        
        public CTDPIServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CTDPIServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CTDPIServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CTDPIServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int ProcessMessages(string sendar, string recipient, string subject, string htmlBody, string strippedHtml, string messageURL, string strippedText, string attachments, System.DateTime sentDate) {
            return base.Channel.ProcessMessages(sendar, recipient, subject, htmlBody, strippedHtml, messageURL, strippedText, attachments, sentDate);
        }
        
        public System.Threading.Tasks.Task<int> ProcessMessagesAsync(string sendar, string recipient, string subject, string htmlBody, string strippedHtml, string messageURL, string strippedText, string attachments, System.DateTime sentDate) {
            return base.Channel.ProcessMessagesAsync(sendar, recipient, subject, htmlBody, strippedHtml, messageURL, strippedText, attachments, sentDate);
        }
        
        public bool DeletedMail(string MailUid) {
            return base.Channel.DeletedMail(MailUid);
        }
        
        public System.Threading.Tasks.Task<bool> DeletedMailAsync(string MailUid) {
            return base.Channel.DeletedMailAsync(MailUid);
        }
        
        public void TestMethod() {
            base.Channel.TestMethod();
        }
        
        public System.Threading.Tasks.Task TestMethodAsync() {
            return base.Channel.TestMethodAsync();
        }
    }
}
