@model OrderManagement.Web.Models.LoginModel
@using OrderManagement.Web.Models
@{
    ViewBag.Title = "UnLock";
    Layout = "~/Views/Shared/__LoginLayout.cshtml";
}

@{
    string currentUserName = null;
    var currentUser = OrderManagement.Web.Helper.Utilitties.UserManager.Current();
    if (currentUser != null)
    {
        currentUserName = currentUser.FirstName + " " + currentUser.LastName;
    }
}

<div class="lock-word animated fadeInDown">
    <span class="first-word">LOCKED</span><span>SCREEN</span>
</div>
<div class="middle-box text-center lockscreen animated fadeInDown">
    <div>
        <div class="m-b-md">
            <img alt="image" class="img-circle circle-border" src="@Url.Action("GetDatabaseImage", "User", new { id = @currentUser.Row_Id })">
        </div>

        <h3>@currentUserName</h3>

        <p>Your are in lock screen. Main app was shut down and you need to enter your password to go back to app.</p>
        @using (Html.BeginForm("UnLock", "Account", FormMethod.Post, new { id = "formID", @class = "m-t" }))
        {
            if (Model != null && Model.LoginAttempt == true)
            {
                if (Model.Result == UserAuthenticationResult.LoggedOut)
                {
                        
            <div>
                <small style="color: #c00000">LoggedOut Successfully.</small>
            </div>
                }
                if (Model.Result == UserAuthenticationResult.DuplicateUser)
                {
                    
            <div>
                <small style="color: #c00000">Duplicate User.</small>
            </div>
           
                }

                else
                {
            <div id="validationalert" class="alert alert-danger">
                <small style="color: #c00000">The username or password is incorrect.</small>
            </div>
                }

            }
            @Html.HiddenFor(m => m.EmailId);
            <div class="form-group">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control", @placeholder = "Password", @onkeypress = "capLock(event)" })
                <div id="divMayus" style="visibility: hidden; color: red">Caps Lock is on.</div>
            </div>
            <button type="submit" class="btn btn-primary block full-width m-b">UnLock</button>
@*
              Html.ActionLink("Forgot Password?", "ForgotPassword", "Account") *@
        }
    </div>
</div>


<script>

    $(document).ready(function () {
        $(window).capslockstate();

        $(window).bind("capsOn", function (event) {
            if ($("#Password:focus").length > 0) {
                document.getElementById('divMayus').style.visibility = 'visible';
            }
        });
        $(window).bind("capsOff capsUnknown", function (event) {
            document.getElementById('divMayus').style.visibility = 'hidden';
        });
        $("#Password").bind("focusout", function (event) {
            document.getElementById('divMayus').style.visibility = 'hidden';
        });
        $("#Password").bind("focusin", function (event) {
            if ($(window).capslockstate("state") === true) {
                document.getElementById('divMayus').style.visibility = 'visible';
            }
        });
        $("#EmailId").bind("focusin", function (event) {
            document.getElementById('validationalert').style.visibility = 'hidden';
        });
        $("#Password").bind("focusin", function (event) {
            document.getElementById('validationalert').style.visibility = 'hidden';
        });
    });

    $(document).ready(function () {

        $('.collapse-link').click(function () {
            var ibox = $(this).closest('div.ibox');
            var button = $(this).find('i');
            var content = ibox.find('div.ibox-content');
            content.slideToggle(200);
            button.toggleClass('fa-chevron-up').toggleClass('fa-chevron-down');
            ibox.toggleClass('').toggleClass('border-bottom');
            setTimeout(function () {
                ibox.resize();
                ibox.find('[id^=map-]').resize();
            }, 50);
        });

        // close ibox function
        $('.close-link').click(function () {
            var content = $(this).closest('div.ibox');
            content.remove();
        });

        // small todo handler
        $('.check-link').click(function () {
            var button = $(this).find('i');
            var label = $(this).next('span');
            button.toggleClass('fa-check-square').toggleClass('fa-square-o');
            label.toggleClass('todo-completed');
            return false;
        });
        $('.navbar-minimalize').click(function () {
            $("body").toggleClass("mini-navbar");
        });
    });
</script>
