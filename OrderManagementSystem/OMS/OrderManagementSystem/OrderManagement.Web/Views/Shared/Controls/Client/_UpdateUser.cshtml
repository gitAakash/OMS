@using OrderManagement.Web.Helper.Utilitties
@model OrderManagement.Web.Models.UserModel

<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/FormValidation.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.alphanumeric.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.form.min.js")" type="text/javascript"></script>



<!--Breadcrumbs--->
<div class="wrapper wrapper-content order-form">
    <div class="row">
        <div class="col-lg-12">
            <h2>Edit User</h2>
            <div class="ibox float-e-margins">
              
                <div class="ibox-content">
                    @*  <form class="form-horizontal" method="get">*@

                    @using (Html.BeginForm("Update", "Client", FormMethod.Post, new {enctype = "multipart/form-data", @class = "form-horizontal", id = "UpdateUserForm"}))
                    {


                        <div class="form-group ">
                            <div class="col-sm-10"></div>
                        </div>

                        <div class="form-group ">
                            <img id="fileimage" src="@Url.Action("GetDatabaseImage", "User", new {id = @Model.Row_Id, @class = "img-circle", width = 100, height = 100})" alt="thumb" />
                            <div class="col-sm-10">
                                <input type="file" id="theFile" name="theFile" />
                            </div>
                        </div>


                        @*
                                 <div class="form-group"><label class="col-sm-2 control-label">User Code:</label>

                                     <div class="col-sm-10"><input type="text" class="form-control" readonly></div>
                                 </div>*@
                        <div class="form-group">
                            <label class="col-sm-2 control-label">First Name:</label>

                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.FirstName, new {@class = "form-control"})

                            </div>
                            <span style="color: red" id="FirstNameValidation"></span>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Last Name:</label>

                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.LastName, new {@class = "form-control"})
                            </div>

                            <span style="color: red" id="LastNameValidation"></span>
                        </div>
                        if (Model.Row_Id != 0 && Model.EmailAddress != null)
                        {
                            <div class="form-group">
                                <label class="col-sm-2 control-label">Email Address:</label>

                                <div class="col-sm-10">
                                    @Html.TextBoxFor(m => m.EmailAddress, new {@class = "form-control", @readonly = "readonly"})
                                </div>
                                <span style="color: red" id="EmailAddressValidation"></span>
                            </div>
                        }

                        <div class="form-group">
                            <label class="col-sm-2 control-label">Password:</label>

                            <div class="col-sm-10">
                                @Html.PasswordFor(m => m.Password, new {@class = "form-control", MaxLength = 16})
                            </div>

                            <span style="color: red" id="PasswordValidation"></span>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Confirm Password:</label>

                            <div class="col-sm-10">
                                @Html.PasswordFor(m => m.ConfirmPassword, new {@class = "form-control", onpaste = "return false;", MaxLength = 16, placeholder = "", autocomplete = "off"})
                            </div>

                            <span style="color: red" id="ConfirmPasswordValidation"></span>
                        </div>

                            @*<div class="form-group">
                            
                              <label class="col-sm-2 control-label">About Self:</label>
                            <div class="col-sm-10">
                                @Html.TextAreaFor(m => m.AboutMe,new{@class = "form-control"})
                            </div>
                        </div> *@
                        <div class="hr-line-dashed"></div>
                        <div class="form-group">
                            <div class="col-sm-4 col-sm-offset-2">

                                @*<button type="button" class="btn btn-primary" onclick="javascript:AddUpdateUser();" id="btnUpdate">Update</button>*@
                                   <button type="submit" class="btn btn-primary" id="btnclientUpdate">Update</button>
                                <button type="button" class="btn btn-default" onclick="javascript:Cancel();" style="width: 82px" id="btnCancel">Cancel</button>
                            </div>
                        </div>

                        @Html.HiddenFor(m => m.UserType)
                         @Html.HiddenFor(m => m.Company)
                         @Html.HiddenFor(m => m.Row_Id)
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script language="javascript" type="text/javascript">

    $(document).ready(function () {

        $(function () {
            $('#theFile').change(function () {
                var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
                if ($.inArray($(this).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
                    alert("Only '.jpeg','.jpg', '.png', '.gif', '.bmp' formats are allowed.");
                    $('#theFile').val("");
                } else {
                    if ($('#theFile').length > 0) {
                        readImageurl(this);
                        // alert("h");

                    }
                }
            });
        });

        function readImageurl(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    // $('#uploadedimage').attr('src', e.target.result);
                    $('#fileimage').attr('src', e.target.result);

                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#UpdateUserForm").validate({
            rules: {
                'FirstName': { required: true },
                'LastName': { required: true },
                // 'EmailAddress': { required: true, email: true },
                'Password': { required: true, minlength: 5 },
                'ConfirmPassword': { required: true, minlength: 5, equalTo: "#Password" },
               
                
                
            },
            messages: {
                'FirstName': { required: "First Name is required" },
                'LastName': { required: "Last Name is required" },
               // 'EmailAddress': { required: "Email address is required", email: "Email address is invalid" },
                'Password': { required: "Password is required", minlength: "Password is not valid. Please enter password between 5 -16 digits." },
                'ConfirmPassword': { required: "Confirm password is required", minlength: "Confirm password is not valid. Please enter password between 5 -16 digits.", equalTo: "Passwords do not match, please reenter" }
              
            },
            errorPlacement: function (error, element) {
                //  alert(element.attr("id"));
                error.appendTo("#" + element.attr("id") + "Validation");
            }
        });



        $('#UpdateUserForm').ajaxForm(function (data) {
          //  alert(data);
            $('#divPageBody').html("");
            $('#divPageBody').html(data);
            $("html, body").animate({ scrollTop: 0 }, "slow");
           // alert("Thank you for your comment!");
        });

    });




    function Cancel() {
       
        $.get('@Url.Action("UserProfile", "Client")', function (data) {
            if (data != null) {
                //$("#spnClientProfile").text("");
                //$("#spnClientProfile").html(data);
                $('#divPageBody').html("");
                $('#divPageBody').html(data);
                $("html, body").animate({ scrollTop: 0 }, "slow");

            }
        });
    }

   
</script>
