@model OrderManagement.Web.Models.JobCopyModel

@*<script type="text/javascript" src="@Url.Content("~/Scripts/jquery-1.10.2.js")"></script>*@
<script type="text/javascript" src="@Url.Content("~/Scripts/Theme_Js/bootstrap.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/Theme_Js/jquery.metisMenu.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/Theme_Js/inspinia.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/Theme_Js/pace.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Content/Track/summernote.min.js")"></script>

<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" type="text/css"/>
<link href="@Url.Content("~/Content/font-awesome.css")" rel="stylesheet" type="text/css"/>
<link href="@Url.Content("~/Content/animate.css")" rel="stylesheet" type="text/css"/>
<link href="@Url.Content("~/Content/Track/summernote.css")" rel="stylesheet" type="text/css"/>
<link href="@Url.Content("~/Content/Track/summernote-bs3.css")" rel="stylesheet" type="text/css"/>
<link href="@Url.Content("~/Content/style.css")" rel="stylesheet" type="text/css"/>

<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.form.min.js")" type="text/javascript"></script>



<style type="text/css">
    
   .modal-backdrop{z-index:-1;}

   .note-editable {
       height: 249px;
   }

</style>





@using (Html.BeginForm("AddorUpdateCopyWriting", "JobTracking", FormMethod.Post, new { @class = "form-horizontal", id = "JobCopyForm" }))
{

    <div class="wrapper wrapper-content gray-bg">
        <div class="row">

            <div class="col-lg-12 animated fadeInRight">
                <div class="mail-box-header">
                    @* <div class="pull-right tooltip-demo">
                        <a href="mailbox.html" class="btn btn-white btn-sm" data-toggle="tooltip" data-placement="top" title="Move to draft folder"><i class="fa fa-pencil"></i>Draft</a>
                        <a href="mailbox.html" class="btn btn-danger btn-sm" data-toggle="tooltip" data-placement="top" title="Discard email"><i class="fa fa-times"></i>Discard</a>
                    </div>*@


                    <div class="form-group m-b-none">
                        <label class="col-sm-2 control-label">Type<span style="color: red">*</span></label>

                        <div class="col-sm-6">
                            @*<input type="text" class="form-control" value="" />*@

                            @Html.DropDownListFor(m => m.Type, new SelectList(Model.TypeList, "Row_Id", "Type"), "Select", new { @class = "form-control", @style = "width: 300px;" })
                        </div>
                        <br />
                        <span style="color: red; display: block; margin-top: 25px; margin-left: 183px; clear: both;" id="TypeValidation"></span>
                    </div>

                </div>
                <div class="mail-box">


                    <div class="mail-body">

                        <div class="form-group">
                            <label class="col-sm-2 control-label">Title<span style="color: red">*</span></label>

                            <div class="col-sm-10">
                                @Html.TextBoxFor(m => m.Title, new { @maxlength = "100", @class = "form-control" })
                            </div>
                            <br />
                            <span style="color: red; display: block; margin-top: 25px; margin-left: 183px; clear: both;" id="TitleValidation"></span>

                        </div>

                    </div>

                     <div class="ibox-content no-padding">
                        <div class="summernote" >
                        </div>
                    </div>

                    <div class="mail-body text-right tooltip-demo">
                        <div class="pull-left">
                            Title Word Count: <span id="spnTitleWordCount"></span>&nbsp; &nbsp;Body Word Count: <span id="spnBodyWordCount"></span>
                        </div>
                        <button id="btnSaveCopy" class="btn btn-sm btn-primary"><i class="fa"></i>Save</button>
                        <button id="btnCancel" type="button" class="btn btn-white btn-sm"><i class="fa"></i>Cancel</button>
                        @* <button class="btn btn-white btn-sm" data-toggle="tooltip" data-placement="top" title="Move to draft folder"><i class="fa fa-pencil"></i>Draft</button>*@
                        @*  <a href="mailbox.html" class="btn btn-sm btn-primary" data-toggle="tooltip" data-placement="top" title="Send"><i class="fa fa-reply"></i>Send</a>
                    <a href="mailbox.html" class="btn btn-white btn-sm" data-toggle="tooltip" data-placement="top" title="Discard email"><i class="fa fa-times"></i>Discard</a>
                    <a href="mailbox.html" class="btn btn-white btn-sm" data-toggle="tooltip" data-placement="top" title="Move to draft folder"><i class="fa fa-pencil"></i>Draft</a>*@
                        <br />
                        <span style="color: red; float: left; margin-top: 25px; margin-left: 183px; clear: both;" id="JobBodyValidation"></span>
                        <div class="clearfix"></div>
                    </div>
                    <div class="clearfix"></div>



                </div>
            </div>
        </div>
    </div>

    @Html.HiddenFor(m => m.JobBody)
    @Html.HiddenFor(m => m.Jobid)
    @Html.HiddenFor(m => m.RowId)
    @Html.HiddenFor(m => m.BodyWordCount)
    @Html.HiddenFor(m => m.TitleWordCount)
    
}


<script>
    function bytesToSize(bytes) {
        var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
        if (bytes === 0) return 'n/a';
        var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
        if (i === 0) return bytes + ' ' + sizes[i];
        if (sizes[i] === 'KB')
        {
            //return (bytes / Math.pow(1024, i)).toFixed(1) + ' ' + sizes[i];
            return (bytes / Math.pow(1024, i)).toFixed(1) ;
        }
        return 0;
    };

    $(document).ready(function () {
        $('.summernote').summernote();
        $('.dropdown-toggle').dropdown();


        $('.note-editor').on('hidden.bs.modal', function () {
            var inputfile = $('input[type=file]');
            //   var g2 = $('input[type=file]')[0];
            var filevalue = $('input[type=file]').val();
            //   var g=  $('input[type=file]')[0].files[0].size;
            if (inputfile != null && (filevalue != "" && filevalue!=null))
            {
                var filesize = $('input[type=file]')[0].files[0].size;
                if (filesize > 0)
                {
                    var kbfilesize = bytesToSize(filesize);
                    if (kbfilesize > 26 ) {
                        $('input[type=file]').val("");
                        alert("Image size should not more than 25 KB");
                    }
                }
            }
        });

      

        var edit = function () {
            $('.click2edit').summernote({ focus: true });
        };
        var save = function () {
            var aHTML = $('.click2edit').code(); //save HTML If you need(aHTML: array).
            $('.click2edit').destroy();
        };


        if ($("#TitleWordCount").val() != null && $("#TitleWordCount").val() != "") {
            $("#spnTitleWordCount").text($("#TitleWordCount").val());
        }
        else {
            $("#spnTitleWordCount").text('0');
        }

        if ($("#BodyWordCount").val() != null && $("#BodyWordCount").val() != "") {
            $("#spnBodyWordCount").text($("#BodyWordCount").val());
        }
        else {
            $("#spnBodyWordCount").text('0');
        }

        $(".note-editable").html($("#JobBody").val());

        $('#Title').keyup(function () {
            $("#spnTitleWordCount").text("");

            if ($("#Title").val() != null && $("#Title").val() != "") {
                var titleWordCount = wordCount($("#Title").val());
                $("#spnTitleWordCount").text(titleWordCount.words);
            }
            else {
                $("#spnTitleWordCount").text('0');
            }
        });

        $('.note-editable').keyup(function () {
            $("#spnBodyWordCount").text("");
            $("#JobBody").val($(".note-editable").text());
            if ($("#JobBody").val() != null && $("#JobBody").val() != "") {
                var bodyWordCount = wordCount($("#JobBody").val());
                $("#spnBodyWordCount").text(bodyWordCount.words);
            } else {
                $("#spnBodyWordCount").text('0');
            }

        });

        $.validator.setDefaults({ ignore: [] });
        ValidateForm();
    });


    $("#btnSaveCopy").click(function () {
     
        $("#JobBody").val($(".note-editable").text());

        var bodyWordCount = wordCount($("#JobBody").val());
        $("#BodyWordCount").val(bodyWordCount.words);
        var titleWordCount = wordCount($("#Title").val());
        $("#TitleWordCount").val(titleWordCount.words);

        $("#Jobid").val($("#GlobleJobId").val());

        $("#JobBody").val("");
        $("#JobBody").val($(".note-editable").html().toString());

        $('#JobCopyForm').ajaxForm(function (data) {
            $('#divContent').html("");
            $('#divContent').html(data);
        });


    });

    function wordCount(val) {

        return {
            charactersNoSpaces: val.replace(/\s+/g, '').length,
            characters: val.length,
            //words: val.replace(/[^\w ]/g, "").split(/\s+/).length,
            words: val.match(/\S+/g).length,
            lines: val.split(/\r*\n/).length
        };
    }


    $("#btnCancel").click(function () {
        $.get('@Url.Action("CopyWritingListing", "JobTracking")', { jobid: $("#GlobleJobId").val() }, function (data) {
            if (data != null) {

                $('#divContent').html("");
                $('#divContent').html(data);
            }
        });

    });


    function ValidateForm() {
        var jid = $("#GlobleJobId").val();

        $("#JobCopyForm").validate({
            rules: {
                'Title': {
                    required: true
                },
                'JobBody': { required: true },
                'Type': {
                    required: true, remote: {
                        url: '@Url.Action("CheckUniqeJobCopyType", "JobTracking")',
                        // dataType: "json",      // <- not needed, default
                        // type: "POST",
                        data: { Jobid: jid, JobcopyRowid: '@Model.RowId' } // <- not needed
                    }
                }
            },
            messages: {
                'Title': { required: "Title is required" },
                'JobBody': { required: "Job Body is required" },
                'Type': { required: "Job Type is required", remote: jQuery.format("Job CopyType is already exist for this Job.") }
            },
            errorPlacement: function (error, element) {
                //  alert(element.attr("id"));
                error.appendTo("#" + element.attr("id") + "Validation");
            }
        });

    }


</script>