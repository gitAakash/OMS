@model IEnumerable<SpGetAllUsers>

<script type="text/javascript" src="@Url.Content("~/Scripts/kendo/2014.2.716/jquery.min.js")"></script>
<script src="@Url.Content("~/Scripts/kendo/2014.2.716/kendo.web.min.js")" type="text/javascript"></script>
<link href="@Url.Content("~/Content/kendo/2014.2.716/kendo.common.min.css")"  rel="stylesheet" type="text/css" />
<link type="text/css" href="@Url.Content("~/Content/kendo/2014.2.716/kendo.flat.min.css")" rel="stylesheet" />


<div class="row">
<div class="col-lg-12 animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <div  class="pull-right">
    <button type="button" class="btn btn-primary" onclick="javascript:addUser();">New</button>
    @if (Model != null && Model.Count() > 0)
    {
        <button class="btn btn-primary" onclick="javascript:editUser();">Edit</button>
        <button class="btn btn-primary" onclick="javascript:deleteUser();">Delete</button>

       <button  class="btn btn-primary" onclick="javascript:Userprofile();">Profile</button>
      <button  class="btn btn-primary" onclick="javascript:UserActivities();">All Activities</button>

        @Html.Hidden("userRowId");
    }
</div>
                    <h5>User List </h5>
                    <div class="clearfix"></div>
                </div>
                <div class="ibox-content">

                    @(Html.Kendo().Grid(Model) // Bind the grid to the Model property of the view
                          .Name("Usergrid")
                          // .Scrollable()
                          .Selectable()
                          .Sortable()
                          .Events(events => events.Change("entSelChange"))
                          .Filterable(ftb => ftb.Mode(GridFilterMode.Menu))
                          .Columns(columns =>
                              {
                                  columns.Bound(p => p.FirstName);   //Create a column bound to the "ProductID" property
                                  columns.Bound(p => p.LastName); //Create a column bound to the "ProductName" property
                                  columns.Bound(p => p.EmailAddress);   //Create a column bound to the "UnitPrice" property
                                  columns.Bound(p => p.UserRoll);//Create a column bound to the "UnitsInStock" property
                                  columns.Bound(p => p.IsActive);//Create a column bound to the "UnitsInStock" property
                                  columns.Bound(p => p.XeroName);
                                  columns.Bound(p => p.GroupsName);
                              })
     
                          .Pageable(pager => pager  
                                                 .PageSizes(new int[]{10,25,50})   
                                                 .Refresh(true)
                          )
//Enable paging
                          .DataSource(dataSource => dataSource        
                                                        .Ajax()
                                                        .PageSize(10)
                                                        .ServerOperation(false)  
                                                        .Model(model => model.Id(e => e.Row_Id))      
                          )
                          )
                </div>
                <div class="btn-grp">
    <button type="button" class="btn btn-warning" onclick="javascript:loadUserlist('Admin');" id="btnAdmin">Admin</button>
    <button type="button" class="btn btn-success" onclick="javascript:loadUserlist('Staff');" id="btnStaff">Staff</button>
    <button type="button" class="btn btn-info" onclick="javascript:loadUserlist('Client');" id="btnClient">Client</button>
    <button type="button" class="btn btn-default" onclick="javascript:loadAllUserlist();" id="btnAllUser">All</button>
</div>
            </div>
        </div>

    </div>
</div>
</div>
<div>
    <span id="spaCreateUserForm"></span>
    <span id="spaUserProfile"></span>
    <span id="spaUserActivities"></span>

</div>
<script language="javascript" type="text/javascript">

    function entSelChange() {
        $("#userRowId").val("");
        var entityGrid = $("#Usergrid").data("kendoGrid");
        var selectedItem = entityGrid.dataItem(entityGrid.select());
        if (selectedItem != null && selectedItem != 'undefined') {
            // alert("The Row Id : " + selectedItem.id);
             $("#userRowId").val(selectedItem.id);
        } else {
           // alert("NO Row Is SELECTED");
            $("#userRowId").val("");
        }
           
    }
   
    function loadUserlist(filterby) {

        // alert("1");
        $filter = new Array();

        $filterName = filterby;
        // $lastName = $("#txtLastName").val();
        //  alert("2");
        if ($filterName) {
            $filter.push({ field: "UserRoll", operator: "contains", value: $filterName });
        }

        //if ($lastName) {
        //    $filter.push({ field: "LastName", operator: "contains", value: $lastName });
        //}
        //  alert("3");
        var grid = $("#Usergrid").data("kendoGrid");
        grid.dataSource.filter($filter);

    };


    function loadAllUserlist() {
        var datasource = $("#Usergrid").data("kendoGrid").dataSource;
        //Clear filters:
        datasource.filter([]);
    }
    
    function addUser() {
      var grid = $("#Usergrid").data("kendoGrid");
          grid.clearSelection();
        $.get('@Url.Action("NewUser", "User")', function (data) {
            if (data != null) {
                scrollPage();
                $("#spaUserProfile").text("");
                $("#spaCreateUserForm").text("");
                $("#spaUserActivities").text("");
                $("#userRowId").val("");
                $("#spaCreateUserForm").html(data);
            }
        });
    }
    
    function editUser() {
        var userid = $("#userRowId").val();
        if (userid != null && userid != 0) {
            $.get('@Url.Action("NewUser", "User")', { userid: userid }, function (data) {
                if (data != null) {
                    scrollPage();
                    $("#spaUserProfile").text("");
                    $("#spaCreateUserForm").text("");
                    $("#spaUserActivities").text("");
                    // $("#userRowId").val("");
                    $("#spaCreateUserForm").html(data);
                }
            });
        } else {
            alert("Please select row to Edit");
        }
    }


    function deleteUser() {
        var userid = $("#userRowId").val();
        // alert(userid);
        if (userid != null && userid != 0) {
            if (confirm("Are you sure want to delete?")) {
                $.get('@Url.Action("DeleteUser", "User")', { userid: userid }, function (data) {
                    if (data != null) {
                        //alert(data);
                        $('#divPageBody').html("");
                        $('#divPageBody').html(data);
                    }
                });
            }

        }
        else {
            alert("Please select row to Delete");
        }
    }

    function scrollPage() {
        $('html, body').animate({
            scrollTop: $("#spaCreateUserForm").offset().top
        }, 500);
    }
    </script>