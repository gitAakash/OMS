@using OrderManagement.Web.Helper.Utilitties
@using System.Text.RegularExpressions;
@model OrderManagement.Web.Models.NewOrderModel
@{
                                                    
    var primaryGrpname = string.Empty;
    var sacondarGrpname = string.Empty;
    var fourthGrpname = string.Empty;
    var k = 0;
    var j = 0;
  
}
<script src="@Url.Content("~/Scripts/jquery-1.10.2.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/FormValidation.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.alphanumeric.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/icheck.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.form.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/bootstrap-datepicker.js")" type="text/javascript"></script>
<link rel="stylesheet" type="text/css" media="all" href="@Url.Content("~/Content/custom.css")"/>
<style>
    .table-condensed td {
        cursor: pointer;
    }
</style>
@*<link rel="stylesheet" type="text/css" media="all" href="@Url.Content("~/Content/bootstrap-datetimepicker.css")"/>*@

@using (Html.BeginForm("AddOrder", "NewOrder", FormMethod.Post, new { @class = "form-horizontal", id = "OrderForm" }))
{
  
    <div class="ibox-content" id="divMainOrder" style="display: block;">

        <div class="form-group ">
            <label class="col-sm-2 control-label underlined">Project details:</label>

            <div class="col-sm-10"></div>
        </div>

        @if ((Model != null))
        {

            <div class="form-group">
                <label class="col-sm-2 control-label">Company:</label>
                <div class="col-sm-4">
                    @Html.DropDownListFor(m => m.Companyid, new SelectList(Model.Companylist, "Row_Id", "XeroName"), "Select", new { @class = "form-control m-b" })
                </div>
                <span style="color: red; font-weight: bold; margin-left: 90px;" id="Companyid"></span>
            </div>
        }
        @if ((Model != null) && ((Model.UserType == 1) || (Model.UserType == 2)))
        {
            <div class="form-group">
                <label class="col-sm-2 control-label">Admin contact name:</label>

                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.OfficeContactName, new { @class = "form-control" })
                </div>
                <span style="color: red" id="OfficeContactNameValidation"></span>
            </div>
            <div class="form-group">

                <label class="col-sm-2 control-label">Phone:</label>

                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
                </div>
                <span style="color: red" id="PhoneValidation"></span>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">Email-id</label>

                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                </div>
                <span style="color: red" id="EmailValidation"></span>
            </div>
        }
        <div class="form-group">
            <label class="col-sm-2 control-label">Property address:</label>

            <div class="col-sm-5">
                @Html.TextBoxFor(m => m.PropertyAddress, new { @class = "form-control" })

            </div>
            <span style="color: red" id="PropertyAddressValidation"></span>
        </div>


        <div class="form-group">
            <label class="col-sm-2 control-label">Primary contact:</label>

            <div class="col-sm-10">
                @for (int i = 0; i < Model.contactTypes.Count; i++)
                {			 
					
                    <label class="checkbox-inline i-checks" data-relativediv="@Model.contactTypes[i].Relativediv">
                        <div class="icheckbox_square-green" style="position: relative;">
                            @Html.CheckBoxFor(m => Model.contactTypes[i].CheckedStatus, new { name = @Model.contactTypes[i].ChkboxName, @class = "chkposition" })
                            @Html.HiddenFor(m => Model.contactTypes[i].ContactTypeId)
                            @Html.HiddenFor(m => Model.contactTypes[i].ContactType)
                            <ins class="iCheck-helper orderchekbox"></ins>
                        </div>

                        <i></i>@Model.contactTypes[i].ContactType
                    </label>
                }
            </div>
        </div>

        <div id="divAgentContent" style="display: none;">
            <div class="form-group">
                <label class="col-sm-2 control-label">Agent name:</label>

                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.AgentName, new { @class = "form-control" })
                </div>
                <span style="color: red" id="AgentNameValidation"></span>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">Agent phone</label>

                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.AgentPhone, new { @class = "form-control" })
                </div>
                <span style="color: red" id="AgentPhoneValidation"></span>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">Agent email:</label>

                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.AgentEmail, new { @class = "form-control" })
                </div>
                <span style="color: red" id="AgentEmailValidation"></span>
            </div>
        </div>

        <div id="divOwnerContent" style="display: none;">
            <div class="form-group">
                <label class="col-sm-2 control-label">Owner name: * </label>
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.OwnerName, new { @class = "form-control" })
                </div>
                <span style="color: red" id="OwnerNameValidation"></span>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">Owner phone: * </label>
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.OwnerPhone, new { @class = "form-control" })
                </div>
                <span style="color: red" id="txt_OwnerPhoneValidation"></span>
            </div>
        </div>

        <div id="divTenentContent" style="display: none;">
            <div class="form-group">
                <label class="col-sm-2 control-label">Tenant name: * </label>
                <div class="col-sm-5">
                    @* <input type="text" id="txt_TenantName" name="txt_TenantName" class="form-control">*@
                    @Html.TextBoxFor(m => m.TenantName, new { @class = "form-control" })
                </div>
                <span style="color: red" id="TenantNameValidation"></span>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">Tenant phone: * </label>
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => m.TenantPhone, new { @class = "form-control" })
                </div>
                <span style="color: red" id="TenantPhoneValidation"></span>
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label">Property ready:</label>

            <div class="col-sm-5">
                @Html.TextBoxFor(m => m.PropertyReady, new { @id = "txtdatetimepicker", @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label">Property to have custom website:</label>

            <div class="col-sm-10">
                <div class="checkbox i-checks">
                    <label class="">
                        <div class="icheckbox_square-green" style="position: relative;">
                            <input type="checkbox" value="" name="Chk_CustomWeb" style="position: absolute; opacity: 0;">
                            <ins class="iCheck-helper" style="position: absolute; top: 0%; left: 0%; display: block; width: 100%; height: 100%; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% rgb(255, 255, 255); border: 0px none; opacity: 0;"></ins>
                        </div>
                        <i></i>Yes
                    </label>
                </div>
            </div>
        </div>





        @{
                string datarelativediv = "";
        }



        @if (Model != null && Model.primaryGroup != null && (Model.primaryGroup.Count > 0))
        {
           
            
            <div id="divProjectReq">

                <label class="col-sm-2 control-label" style="float: left; margin-right: 6px;">Project requirements:</label>
                <div style="float: left; width: 80%;">
                    @foreach (var item in Model.primaryGroup)
                    {
                        if (@item != null)
                        {  <div class="form-group">
                        <div class="col-sm-10">
                            <div class="checkbox i-checks">
                                <label class="">
                                    @{
                                    
                                         primaryGrpname = Regex.Replace(item.PrimaryProductGroupName, @"[^0-9a-zA-Z]+", "");
                                    }

                                    <div class="icheckbox_square-green for_ChkboxPhotoGraphy" data-relativediv="div_@primaryGrpname" style="position: relative;">


                                      @*  <input type="checkbox" id="chk_@(primaryGrpname)"/>*@

                                        @Html.CheckBoxFor(m=>m.primaryGroup[k].ischecked)
                                          @Html.HiddenFor(m=>m.primaryGroup[k].PrimaryProductGroupName)

                                        <ins class="iCheck-helper orderchekbox"></ins>
                                    </div>
                                    <i></i>@item.PrimaryProductGroupName

                                </label>
                            </div>
                        </div>
                    </div>
                        <div id="div_@primaryGrpname"  style="display:none; margin-left:30px;">
                            @foreach (var scondGrp in item.secondaryProductGroup)
                            {
                                {

                                    sacondarGrpname = Regex.Replace(scondGrp.SecondaryProductGroup, @"[^0-9a-zA-Z]+", "");
                                }
                                <div class="form-group">
                                    <div class="col-sm-10">
                                        <div class="radio i-checks">
                                            <label class="">
                                                <div  onclick="getRedioButton('@sacondarGrpname','@primaryGrpname');" class="iradio_square-green for_radio" style="position: relative;">
                                                    @*<input type="radio" name="rdo_@(primaryGrpname)" value="@(sacondarGrpname)"  style="position: absolute; opacity: 0;">*@

                                                       @Html.RadioButtonFor(m => m.primaryGroup[k].secondaryProductGroup[j].ischecked, new {@name="rdo_"+primaryGrpname ,@value=sacondarGrpname, @style="position: absolute; opacity: 0;"})
                                                       @Html.HiddenFor(m=>m.primaryGroup[k].secondaryProductGroup[j].SecondaryProductGroup)
                                                 @*   <ins class="iCheck-helper" style="position: absolute; top: 0%; left: 0%; display: block; width: 100%; height: 100%; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% rgb(255, 255, 255); border: 0px none; opacity: 0;"></ins>*@
                                                   <ins class="iCheck-helper"></ins>
                                                      </div>
                                                <i></i>@scondGrp.SecondaryProductGroup
                                            </label>
                                        </div>
                                    </div>


                                    @if (@scondGrp != null)
                                    {
                                        <div id="chklistfor_@(sacondarGrpname)"  style="display:none; margin-left:30px;">

                                            @foreach (var thrdItem in scondGrp.thirdProductGroup)
                                            {
                                                         
                                                {

                                                    fourthGrpname = Regex.Replace(thrdItem.ThirdProductGroup, @"[^0-9a-zA-Z]+", "");  
                                                }
                                                
                                                <div class="col-sm-10">
                                                    <div class="checkbox i-checks">
                                                        <label class="">
                                                            <div class="icheckbox_square-green for_ChkboxPhotoGraphy" data-relativediv="chkOption_@(fourthGrpname)"  style="position: relative;">
                                                                <input type="checkbox" id="chk_@(thrdItem.ThirdProductGroup)"/>
                                                                <ins class="iCheck-helper orderchekbox"></ins>
                                                            </div>
                                                            <i></i>@thrdItem.ThirdProductGroup
                                                        </label>
                                                    </div>
                                                </div>
                                                // data-relativediv="chkOption_@(thrdItem.ThirdProductGroup)"
                                                // id="chkOption_@(thrdItem.ThirdProductGroup)"
                                                if (thrdItem != null && thrdItem.webOption.Count > 0)
                                                {
                                                <div id="chkOption_@(fourthGrpname)" style="display:none;float: left; margin-left: 30px;">

                                                    @foreach (var option in thrdItem.webOption)
                                                    {
                                                        <div class="col-sm-10">
                                                            <div class="checkbox i-checks">
                                                                <label class="">
                                                                    <div class="icheckbox_square-green for_ChkboxPhotoGraphy"  style="position: relative;">
                                                                        <input type="checkbox" />
                                                                        <ins class="iCheck-helper orderchekbox"></ins>
                                                                    </div>
                                                                    <i></i>@option.Option
                                                                </label>
                                                            </div>
                                                        </div>

                                                    }

                                                </div>
                                    
                                                }


                                            }
                                        </div>
                                    }

                                </div>
                                
                                j++;
                            }
                        </div>


                        }


                        k++;
                        j = 0;
                    }
                </div>
                <div style="clear: both;"></div>
            </div>
        }





        <div class="form-group">
            <label class="col-sm-2 control-label">Special instructions:</label>
            <div class="col-sm-10">

                @Html.TextAreaFor(m => m.SpecialInstruction, new { @class = "form-control", @rows = "4" })
                @* <textarea rows="4" name="txt_SpecialInsruction" class="form-control"></textarea>*@
            </div>
        </div>
    </div> <!-- end div main order -->
    

    
    <div class="form-group">
        <div class="col-sm-4 col-sm-offset-2">
            @*<a href="#" class="btn btn-primary btn-rounded"><i class="fa fa-check"></i>Submit</a>*@
            <button type="submit" class="btn btn-primary block full-width m-b">Submit</button>
        </div>
    </div>

       
                       
}



<script language="javascript" type="text/javascript">



    $(document).ready(function () {

        $('#txtdatetimepicker').datepicker({ format: 'dd/mm/yyyy' }).datepicker("setDate", new Date());
        $('.i-checks').iCheck({
            checkboxClass: 'icheckbox_square-green',
            radioClass: 'iradio_square-green'
        });


        $(function () {

            $('[data-relativediv]').click(function () {
                debugger;

                var relativeDivId = $(this).data('relativediv');


                $('#' + relativeDivId).slideToggle();
                var isChecked = $("#chk_FloorPlansLandboxes").is(':checked');
                UncheckRedioOnCheckBoxUncheck(relativeDivId, isChecked);
            });

        });
        @*  $(function () {

            $('[data - relative]').click(function () {

                var relativeDivId = $(this).data('relativediv');
                //id="div_@myString" 
                alert(relativeDivId);

                $('#' + relativeDivId).slideToggle();

            });

        });*@

       


      @*  $("input:radio[name=theme]").click(function() {
             var value = $(this).val();
            });*@



        //$(".for_radio").click(function () {
        //    $("#imageOptions2").show();
        //    $("#imageOptions8").hide();
        //    $("#imageOptions5").hide();
        //});
        //$(".for_radio2").click(function () {
        //    $("#imageOptions5").show();
        //    $("#imageOptions2").hide();
        //    $("#imageOptions8").hide();
        //});
        //$(".for_radio3").click(function () {
        //    $("#imageOptions8").show();
        //    $("#imageOptions2").hide();
        //    $("#imageOptions5").hide();
        //});

        //$(".for_radioPrestigeDay").click(function () {
        //    $("#divPrestigeDayOption").show();
        //    $("#divPrestigeDuskOption").hide();
        //});

        //$(".for_radioPrestigeDusk").click(function () {
        //    $("#divPrestigeDuskOption").show();
        //    $("#divPrestigeDayOption").hide();
        //});

        //$(".for_Rental_photography_5").click(function () {
        //    $("#divRentalOption5").show();
        //    $("#divRentalOption10").hide();
        //});

        //$(".for_Rental_photography_10").click(function () {
        //    $("#divRentalOption10").show();
        //    $("#divRentalOption5").hide();
        //});


        $('#OrderForm').ajaxForm(function (data) {
            $('#divPageBody').html("");
            $('#divPageBody').html(data);
        });

    });


    function getRedioButton(ckeckboxId, rdoName) {

        var rdoButtonName = "rdo_" + rdoName;

        $("input:radio[name='" + rdoButtonName + "']").each(function () {

            if ($("#chklistfor_" + $(this).val()).is(":visible")) {
                $("#chklistfor_" + $(this).val()).hide();
            }

        });

        $("#chklistfor_" + ckeckboxId).show();
    }



    function UncheckRedioOnCheckBoxUncheck(checkboxId, isChecked) {


        // alert(checkboxId);
        //  debugger;
        var data = checkboxId;
        var rdoButtonName = data.split('div_');
        // alert(rdoButtonName[1]);
        var rdoButtonName = "rdo_" + rdoButtonName[1];
        if (isChecked) {
            $("input:radio[name='" + rdoButtonName + "']").each(function () {
                //   debugger;
                //  $(this).attr("disabled", false);

                // $(this).attr('checked', false);
                //  if ($("#chklistfor_" + $(this).val()).is(":visible")) {
                //$("#chklistfor_" + $(this).val()).hide();
                //  }

            });
        }


    }
</script>






