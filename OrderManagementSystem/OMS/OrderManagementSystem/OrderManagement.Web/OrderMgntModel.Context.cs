//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OrderManagement.Web
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class OrderMgntEntities : DbContext
    {
        public OrderMgntEntities()
            : base("name=OrderMgntEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Asset> Assets { get; set; }
        public DbSet<AssetAllocation> AssetAllocations { get; set; }
        public DbSet<AssetConfig> AssetConfigs { get; set; }
        public DbSet<AssetHealthMeasure> AssetHealthMeasures { get; set; }
        public DbSet<AssetService> AssetServices { get; set; }
        public DbSet<AssetStatu> AssetStatus { get; set; }
        public DbSet<BusinessProcess> BusinessProcesses { get; set; }
        public DbSet<Calendar> Calendars { get; set; }
        public DbSet<CalendarUser> CalendarUsers { get; set; }
        public DbSet<Campaign> Campaigns { get; set; }
        public DbSet<CampaignAsset> CampaignAssets { get; set; }
        public DbSet<CampaignCollateral> CampaignCollaterals { get; set; }
        public DbSet<CampaignNotification> CampaignNotifications { get; set; }
        public DbSet<CampaignSitting> CampaignSittings { get; set; }
        public DbSet<CampaignTimeLine> CampaignTimeLines { get; set; }
        public DbSet<CancelledOrder> CancelledOrders { get; set; }
        public DbSet<ColorMaster> ColorMasters { get; set; }
        public DbSet<Company> Companies { get; set; }
        public DbSet<CompanyMail> CompanyMails { get; set; }
        public DbSet<CompanyOrder> CompanyOrders { get; set; }
        public DbSet<Contact> Contacts { get; set; }
        public DbSet<EventTracking> EventTrackings { get; set; }
        public DbSet<Mail> Mails { get; set; }
        public DbSet<OrderContact> OrderContacts { get; set; }
        public DbSet<OrderEvent> OrderEvents { get; set; }
        public DbSet<OrderItem> OrderItems { get; set; }
        public DbSet<Order> Orders { get; set; }
        public DbSet<OrderType> OrderTypes { get; set; }
        public DbSet<Organisation> Organisations { get; set; }
        public DbSet<ProductCompany> ProductCompanies { get; set; }
        public DbSet<ProductGroup> ProductGroups { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<ProductSchedule> ProductSchedules { get; set; }
        public DbSet<ProductUser> ProductUsers { get; set; }
        public DbSet<Property> Properties { get; set; }
        public DbSet<PropertyInvoice> PropertyInvoices { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<UserType> UserTypes { get; set; }
        public DbSet<Visitor_Fact> Visitor_Fact { get; set; }
        public DbSet<UserProductGroup> UserProductGroups { get; set; }
        public DbSet<Attachment> Attachments { get; set; }
        public DbSet<OrderAttachment> OrderAttachments { get; set; }
        public DbSet<OrderStatus> OrderStatus1 { get; set; }
        public DbSet<Event> Events { get; set; }
        public DbSet<ForgotPwd> ForgotPwds { get; set; }
        public DbSet<OrderSubItem> OrderSubItems { get; set; }
        public DbSet<ProductSubGroup> ProductSubGroups { get; set; }
        public DbSet<ErrorLog> ErrorLogs { get; set; }
        public DbSet<EventException> EventExceptions { get; set; }
        public DbSet<Job> Jobs { get; set; }
        public DbSet<JobAttachment> JobAttachments { get; set; }
        public DbSet<JobCopy> JobCopies { get; set; }
        public DbSet<JobCopyType> JobCopyTypes { get; set; }
        public DbSet<JobStatus> JobStatus { get; set; }
        public DbSet<Application> Applications { get; set; }
        public DbSet<JobEvent> JobEvents { get; set; }
    
        public virtual ObjectResult<DailyScheduleDusk_Result> DailyScheduleDusk()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DailyScheduleDusk_Result>("DailyScheduleDusk");
        }
    
        public virtual int GetDataforCalenderEntry(string orderId)
        {
            var orderIdParameter = orderId != null ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetDataforCalenderEntry", orderIdParameter);
        }
    
        public virtual ObjectResult<ProductCategories> GetProductCategory(Nullable<int> org_Id, Nullable<int> parent_Id)
        {
            var org_IdParameter = org_Id.HasValue ?
                new ObjectParameter("Org_Id", org_Id) :
                new ObjectParameter("Org_Id", typeof(int));
    
            var parent_IdParameter = parent_Id.HasValue ?
                new ObjectParameter("Parent_Id", parent_Id) :
                new ObjectParameter("Parent_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductCategories>("GetProductCategory", org_IdParameter, parent_IdParameter);
        }
    
        public virtual ObjectResult<string> GetProductSchedules(Nullable<int> xeroID)
        {
            var xeroIDParameter = xeroID.HasValue ?
                new ObjectParameter("XeroID", xeroID) :
                new ObjectParameter("XeroID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetProductSchedules", xeroIDParameter);
        }
    
        public virtual int InsertCalendars(string calendar, Nullable<int> org_Id, string timeZone, string kind, string eTag, Nullable<int> colorId, string background, string foreground, string accessRole, Nullable<bool> isSelected)
        {
            var calendarParameter = calendar != null ?
                new ObjectParameter("Calendar", calendar) :
                new ObjectParameter("Calendar", typeof(string));
    
            var org_IdParameter = org_Id.HasValue ?
                new ObjectParameter("Org_Id", org_Id) :
                new ObjectParameter("Org_Id", typeof(int));
    
            var timeZoneParameter = timeZone != null ?
                new ObjectParameter("TimeZone", timeZone) :
                new ObjectParameter("TimeZone", typeof(string));
    
            var kindParameter = kind != null ?
                new ObjectParameter("Kind", kind) :
                new ObjectParameter("Kind", typeof(string));
    
            var eTagParameter = eTag != null ?
                new ObjectParameter("eTag", eTag) :
                new ObjectParameter("eTag", typeof(string));
    
            var colorIdParameter = colorId.HasValue ?
                new ObjectParameter("ColorId", colorId) :
                new ObjectParameter("ColorId", typeof(int));
    
            var backgroundParameter = background != null ?
                new ObjectParameter("Background", background) :
                new ObjectParameter("Background", typeof(string));
    
            var foregroundParameter = foreground != null ?
                new ObjectParameter("Foreground", foreground) :
                new ObjectParameter("Foreground", typeof(string));
    
            var accessRoleParameter = accessRole != null ?
                new ObjectParameter("AccessRole", accessRole) :
                new ObjectParameter("AccessRole", typeof(string));
    
            var isSelectedParameter = isSelected.HasValue ?
                new ObjectParameter("IsSelected", isSelected) :
                new ObjectParameter("IsSelected", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCalendars", calendarParameter, org_IdParameter, timeZoneParameter, kindParameter, eTagParameter, colorIdParameter, backgroundParameter, foregroundParameter, accessRoleParameter, isSelectedParameter);
        }
    
        public virtual int InsertCancelledOrder(Nullable<int> orgId, string property, string service, string requiredDate, string fileName)
        {
            var orgIdParameter = orgId.HasValue ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(int));
    
            var propertyParameter = property != null ?
                new ObjectParameter("Property", property) :
                new ObjectParameter("Property", typeof(string));
    
            var serviceParameter = service != null ?
                new ObjectParameter("Service", service) :
                new ObjectParameter("Service", typeof(string));
    
            var requiredDateParameter = requiredDate != null ?
                new ObjectParameter("RequiredDate", requiredDate) :
                new ObjectParameter("RequiredDate", typeof(string));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCancelledOrder", orgIdParameter, propertyParameter, serviceParameter, requiredDateParameter, fileNameParameter);
        }
    
        public virtual int InsertEvents(string calendar, string orderId, string title, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> movedOn, string status)
        {
            var calendarParameter = calendar != null ?
                new ObjectParameter("Calendar", calendar) :
                new ObjectParameter("Calendar", typeof(string));
    
            var orderIdParameter = orderId != null ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var movedOnParameter = movedOn.HasValue ?
                new ObjectParameter("MovedOn", movedOn) :
                new ObjectParameter("MovedOn", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEvents", calendarParameter, orderIdParameter, titleParameter, startDateParameter, endDateParameter, movedOnParameter, statusParameter);
        }
    
        public virtual int InsertGooglePushNotification(string channelId, string channelToken, Nullable<System.DateTime> channelExpiration, string resourceId, string resourceURI, string resourceState, Nullable<long> messageNumber)
        {
            var channelIdParameter = channelId != null ?
                new ObjectParameter("ChannelId", channelId) :
                new ObjectParameter("ChannelId", typeof(string));
    
            var channelTokenParameter = channelToken != null ?
                new ObjectParameter("ChannelToken", channelToken) :
                new ObjectParameter("ChannelToken", typeof(string));
    
            var channelExpirationParameter = channelExpiration.HasValue ?
                new ObjectParameter("ChannelExpiration", channelExpiration) :
                new ObjectParameter("ChannelExpiration", typeof(System.DateTime));
    
            var resourceIdParameter = resourceId != null ?
                new ObjectParameter("ResourceId", resourceId) :
                new ObjectParameter("ResourceId", typeof(string));
    
            var resourceURIParameter = resourceURI != null ?
                new ObjectParameter("ResourceURI", resourceURI) :
                new ObjectParameter("ResourceURI", typeof(string));
    
            var resourceStateParameter = resourceState != null ?
                new ObjectParameter("ResourceState", resourceState) :
                new ObjectParameter("ResourceState", typeof(string));
    
            var messageNumberParameter = messageNumber.HasValue ?
                new ObjectParameter("MessageNumber", messageNumber) :
                new ObjectParameter("MessageNumber", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertGooglePushNotification", channelIdParameter, channelTokenParameter, channelExpirationParameter, resourceIdParameter, resourceURIParameter, resourceStateParameter, messageNumberParameter);
        }
    
        public virtual int InsertGooglePushNotificationWatch(Nullable<int> org_Id, Nullable<int> oAuthId, Nullable<int> calendarId, Nullable<System.Guid> channelId, string type, Nullable<long> expiration, string resourceId, string resourceURI, Nullable<bool> active)
        {
            var org_IdParameter = org_Id.HasValue ?
                new ObjectParameter("Org_Id", org_Id) :
                new ObjectParameter("Org_Id", typeof(int));
    
            var oAuthIdParameter = oAuthId.HasValue ?
                new ObjectParameter("OAuthId", oAuthId) :
                new ObjectParameter("OAuthId", typeof(int));
    
            var calendarIdParameter = calendarId.HasValue ?
                new ObjectParameter("CalendarId", calendarId) :
                new ObjectParameter("CalendarId", typeof(int));
    
            var channelIdParameter = channelId.HasValue ?
                new ObjectParameter("ChannelId", channelId) :
                new ObjectParameter("ChannelId", typeof(System.Guid));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var expirationParameter = expiration.HasValue ?
                new ObjectParameter("Expiration", expiration) :
                new ObjectParameter("Expiration", typeof(long));
    
            var resourceIdParameter = resourceId != null ?
                new ObjectParameter("ResourceId", resourceId) :
                new ObjectParameter("ResourceId", typeof(string));
    
            var resourceURIParameter = resourceURI != null ?
                new ObjectParameter("ResourceURI", resourceURI) :
                new ObjectParameter("ResourceURI", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertGooglePushNotificationWatch", org_IdParameter, oAuthIdParameter, calendarIdParameter, channelIdParameter, typeParameter, expirationParameter, resourceIdParameter, resourceURIParameter, activeParameter);
        }
    
        public virtual int InsertGoogleSyncTime(string calendar, Nullable<System.DateTime> lastSync)
        {
            var calendarParameter = calendar != null ?
                new ObjectParameter("Calendar", calendar) :
                new ObjectParameter("Calendar", typeof(string));
    
            var lastSyncParameter = lastSync.HasValue ?
                new ObjectParameter("LastSync", lastSync) :
                new ObjectParameter("LastSync", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertGoogleSyncTime", calendarParameter, lastSyncParameter);
        }
    
        public virtual int InsertOtherEvents(string calendar, string eventId, string recurringEventId, string colorId, string attendees, Nullable<bool> attendeesOmitted, Nullable<bool> anyoneCanAddSelf, Nullable<bool> locked, string title, string location, string description, string kind, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> movedOn, string status, string recurrence, string organizer, string creator, Nullable<int> sequence, string transperancy, Nullable<System.DateTime> updated, string visibility, Nullable<bool> isAllDay)
        {
            var calendarParameter = calendar != null ?
                new ObjectParameter("Calendar", calendar) :
                new ObjectParameter("Calendar", typeof(string));
    
            var eventIdParameter = eventId != null ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(string));
    
            var recurringEventIdParameter = recurringEventId != null ?
                new ObjectParameter("RecurringEventId", recurringEventId) :
                new ObjectParameter("RecurringEventId", typeof(string));
    
            var colorIdParameter = colorId != null ?
                new ObjectParameter("ColorId", colorId) :
                new ObjectParameter("ColorId", typeof(string));
    
            var attendeesParameter = attendees != null ?
                new ObjectParameter("Attendees", attendees) :
                new ObjectParameter("Attendees", typeof(string));
    
            var attendeesOmittedParameter = attendeesOmitted.HasValue ?
                new ObjectParameter("AttendeesOmitted", attendeesOmitted) :
                new ObjectParameter("AttendeesOmitted", typeof(bool));
    
            var anyoneCanAddSelfParameter = anyoneCanAddSelf.HasValue ?
                new ObjectParameter("AnyoneCanAddSelf", anyoneCanAddSelf) :
                new ObjectParameter("AnyoneCanAddSelf", typeof(bool));
    
            var lockedParameter = locked.HasValue ?
                new ObjectParameter("Locked", locked) :
                new ObjectParameter("Locked", typeof(bool));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var kindParameter = kind != null ?
                new ObjectParameter("Kind", kind) :
                new ObjectParameter("Kind", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var movedOnParameter = movedOn.HasValue ?
                new ObjectParameter("MovedOn", movedOn) :
                new ObjectParameter("MovedOn", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var recurrenceParameter = recurrence != null ?
                new ObjectParameter("Recurrence", recurrence) :
                new ObjectParameter("Recurrence", typeof(string));
    
            var organizerParameter = organizer != null ?
                new ObjectParameter("Organizer", organizer) :
                new ObjectParameter("Organizer", typeof(string));
    
            var creatorParameter = creator != null ?
                new ObjectParameter("Creator", creator) :
                new ObjectParameter("Creator", typeof(string));
    
            var sequenceParameter = sequence.HasValue ?
                new ObjectParameter("Sequence", sequence) :
                new ObjectParameter("Sequence", typeof(int));
    
            var transperancyParameter = transperancy != null ?
                new ObjectParameter("Transperancy", transperancy) :
                new ObjectParameter("Transperancy", typeof(string));
    
            var updatedParameter = updated.HasValue ?
                new ObjectParameter("Updated", updated) :
                new ObjectParameter("Updated", typeof(System.DateTime));
    
            var visibilityParameter = visibility != null ?
                new ObjectParameter("Visibility", visibility) :
                new ObjectParameter("Visibility", typeof(string));
    
            var isAllDayParameter = isAllDay.HasValue ?
                new ObjectParameter("IsAllDay", isAllDay) :
                new ObjectParameter("IsAllDay", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertOtherEvents", calendarParameter, eventIdParameter, recurringEventIdParameter, colorIdParameter, attendeesParameter, attendeesOmittedParameter, anyoneCanAddSelfParameter, lockedParameter, titleParameter, locationParameter, descriptionParameter, kindParameter, startDateParameter, endDateParameter, movedOnParameter, statusParameter, recurrenceParameter, organizerParameter, creatorParameter, sequenceParameter, transperancyParameter, updatedParameter, visibilityParameter, isAllDayParameter);
        }
    
        public virtual int InsertPropertyInvoiceNo(Nullable<int> propertyId, string invoiceNo)
        {
            var propertyIdParameter = propertyId.HasValue ?
                new ObjectParameter("PropertyId", propertyId) :
                new ObjectParameter("PropertyId", typeof(int));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPropertyInvoiceNo", propertyIdParameter, invoiceNoParameter);
        }
    
        public virtual int Processmail(string x, Nullable<int> org_Id)
        {
            var xParameter = x != null ?
                new ObjectParameter("X", x) :
                new ObjectParameter("X", typeof(string));
    
            var org_IdParameter = org_Id.HasValue ?
                new ObjectParameter("Org_Id", org_Id) :
                new ObjectParameter("Org_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Processmail", xParameter, org_IdParameter);
        }
    
        [EdmFunction("OrderMgntEntities", "QFN_SPLIT")]
        public virtual IQueryable<QFN_SPLIT_Result> QFN_SPLIT(string iNPUTSTR, string sEPRATOR)
        {
            var iNPUTSTRParameter = iNPUTSTR != null ?
                new ObjectParameter("INPUTSTR", iNPUTSTR) :
                new ObjectParameter("INPUTSTR", typeof(string));
    
            var sEPRATORParameter = sEPRATOR != null ?
                new ObjectParameter("SEPRATOR", sEPRATOR) :
                new ObjectParameter("SEPRATOR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<QFN_SPLIT_Result>("[OrderMgntEntities].[QFN_SPLIT](@INPUTSTR, @SEPRATOR)", iNPUTSTRParameter, sEPRATORParameter);
        }
    
        public virtual ObjectResult<SelectCalendarsForPushNotification_Result> SelectCalendarsForPushNotification()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCalendarsForPushNotification_Result>("SelectCalendarsForPushNotification");
        }
    
        public virtual ObjectResult<SelectClientCredentials_Result> SelectClientCredentials(Nullable<int> orgId, string name)
        {
            var orgIdParameter = orgId.HasValue ?
                new ObjectParameter("orgId", orgId) :
                new ObjectParameter("orgId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectClientCredentials_Result>("SelectClientCredentials", orgIdParameter, nameParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> SelectLastSyncForCalendar(string calendar)
        {
            var calendarParameter = calendar != null ?
                new ObjectParameter("Calendar", calendar) :
                new ObjectParameter("Calendar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("SelectLastSyncForCalendar", calendarParameter);
        }
    
        [EdmFunction("OrderMgntEntities", "split")]
        public virtual IQueryable<split_Result> split(string del, string str)
        {
            var delParameter = del != null ?
                new ObjectParameter("del", del) :
                new ObjectParameter("del", typeof(string));
    
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<split_Result>("[OrderMgntEntities].[split](@del, @str)", delParameter, strParameter);
        }
    
        public virtual int SyncCompany(string x, Nullable<int> org_Id)
        {
            var xParameter = x != null ?
                new ObjectParameter("X", x) :
                new ObjectParameter("X", typeof(string));
    
            var org_IdParameter = org_Id.HasValue ?
                new ObjectParameter("Org_Id", org_Id) :
                new ObjectParameter("Org_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SyncCompany", xParameter, org_IdParameter);
        }
    
        public virtual int SyncProducts(string x, Nullable<int> orgId)
        {
            var xParameter = x != null ?
                new ObjectParameter("X", x) :
                new ObjectParameter("X", typeof(string));
    
            var orgIdParameter = orgId.HasValue ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SyncProducts", xParameter, orgIdParameter);
        }
    
        public virtual int UpdateEvent(string event_id, string oldCalendarUser)
        {
            var event_idParameter = event_id != null ?
                new ObjectParameter("Event_id", event_id) :
                new ObjectParameter("Event_id", typeof(string));
    
            var oldCalendarUserParameter = oldCalendarUser != null ?
                new ObjectParameter("OldCalendarUser", oldCalendarUser) :
                new ObjectParameter("OldCalendarUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEvent", event_idParameter, oldCalendarUserParameter);
        }
    
        public virtual int UpdateOrderEvent(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrderEvent", orderIdParameter);
        }
    
        public virtual int DeleteJobAttachment(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID, Nullable<int> jobAttachmentId)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            var jobAttachmentIdParameter = jobAttachmentId.HasValue ?
                new ObjectParameter("JobAttachmentId", jobAttachmentId) :
                new ObjectParameter("JobAttachmentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteJobAttachment", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter, jobAttachmentIdParameter);
        }
    
        public virtual int DeleteJobCopy(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID, Nullable<int> jOB_COPY_ID)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            var jOB_COPY_IDParameter = jOB_COPY_ID.HasValue ?
                new ObjectParameter("JOB_COPY_ID", jOB_COPY_ID) :
                new ObjectParameter("JOB_COPY_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteJobCopy", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter, jOB_COPY_IDParameter);
        }
    
        public virtual ObjectResult<GetAllUsersJobStatus> GetAllUsersJobStatus(Nullable<int> orgId)
        {
            var orgIdParameter = orgId.HasValue ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllUsersJobStatus>("GetAllUsersJobStatus", orgIdParameter);
        }
    
        public virtual ObjectResult<GetOrders_Result> GetOrders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrders_Result>("GetOrders");
        }
    
        public virtual ObjectResult<InsertJobAttachment> InsertJobAttachment(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID, Nullable<int> job_Id, string fileName, string fileExtension, Nullable<int> fileSize, string groupType, string tags, string folder, string filePath, Nullable<int> row_id, Nullable<int> isDeleted)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            var job_IdParameter = job_Id.HasValue ?
                new ObjectParameter("Job_Id", job_Id) :
                new ObjectParameter("Job_Id", typeof(int));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var fileExtensionParameter = fileExtension != null ?
                new ObjectParameter("FileExtension", fileExtension) :
                new ObjectParameter("FileExtension", typeof(string));
    
            var fileSizeParameter = fileSize.HasValue ?
                new ObjectParameter("FileSize", fileSize) :
                new ObjectParameter("FileSize", typeof(int));
    
            var groupTypeParameter = groupType != null ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(string));
    
            var tagsParameter = tags != null ?
                new ObjectParameter("Tags", tags) :
                new ObjectParameter("Tags", typeof(string));
    
            var folderParameter = folder != null ?
                new ObjectParameter("Folder", folder) :
                new ObjectParameter("Folder", typeof(string));
    
            var filePathParameter = filePath != null ?
                new ObjectParameter("FilePath", filePath) :
                new ObjectParameter("FilePath", typeof(string));
    
            var row_idParameter = row_id.HasValue ?
                new ObjectParameter("Row_id", row_id) :
                new ObjectParameter("Row_id", typeof(int));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("isDeleted", isDeleted) :
                new ObjectParameter("isDeleted", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertJobAttachment>("InsertJobAttachment", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter, job_IdParameter, fileNameParameter, fileExtensionParameter, fileSizeParameter, groupTypeParameter, tagsParameter, folderParameter, filePathParameter, row_idParameter, isDeletedParameter);
        }
    
        public virtual int InsertJobCopy(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID, Nullable<int> job_Id, Nullable<int> type_Id, string title, Nullable<int> titleWordCount, string body, Nullable<int> bodyWordCount, string status)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            var job_IdParameter = job_Id.HasValue ?
                new ObjectParameter("Job_Id", job_Id) :
                new ObjectParameter("Job_Id", typeof(int));
    
            var type_IdParameter = type_Id.HasValue ?
                new ObjectParameter("Type_Id", type_Id) :
                new ObjectParameter("Type_Id", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var titleWordCountParameter = titleWordCount.HasValue ?
                new ObjectParameter("TitleWordCount", titleWordCount) :
                new ObjectParameter("TitleWordCount", typeof(int));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var bodyWordCountParameter = bodyWordCount.HasValue ?
                new ObjectParameter("BodyWordCount", bodyWordCount) :
                new ObjectParameter("BodyWordCount", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertJobCopy", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter, job_IdParameter, type_IdParameter, titleParameter, titleWordCountParameter, bodyParameter, bodyWordCountParameter, statusParameter);
        }
    
        public virtual ObjectResult<SelectJobAttachmentFolders> SelectJobAttachmentFolders(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectJobAttachmentFolders>("SelectJobAttachmentFolders", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter);
        }
    
        public virtual ObjectResult<SelectJobCopy> SelectJobCopy(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID, Nullable<int> jOB_ID)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            var jOB_IDParameter = jOB_ID.HasValue ?
                new ObjectParameter("JOB_ID", jOB_ID) :
                new ObjectParameter("JOB_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectJobCopy>("SelectJobCopy", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter, jOB_IDParameter);
        }
    
        public virtual ObjectResult<SelectJobCopyType> SelectJobCopyTypes(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectJobCopyType>("SelectJobCopyTypes", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter);
        }
    
        public virtual int UpdateJobAttachment(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID, Nullable<int> jobAttachmentId, string fileName, string fileExtension, Nullable<int> fileSize, byte[] file, string groupType, string tags, string folder, Nullable<bool> selected)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            var jobAttachmentIdParameter = jobAttachmentId.HasValue ?
                new ObjectParameter("JobAttachmentId", jobAttachmentId) :
                new ObjectParameter("JobAttachmentId", typeof(int));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var fileExtensionParameter = fileExtension != null ?
                new ObjectParameter("FileExtension", fileExtension) :
                new ObjectParameter("FileExtension", typeof(string));
    
            var fileSizeParameter = fileSize.HasValue ?
                new ObjectParameter("FileSize", fileSize) :
                new ObjectParameter("FileSize", typeof(int));
    
            var fileParameter = file != null ?
                new ObjectParameter("File", file) :
                new ObjectParameter("File", typeof(byte[]));
    
            var groupTypeParameter = groupType != null ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(string));
    
            var tagsParameter = tags != null ?
                new ObjectParameter("Tags", tags) :
                new ObjectParameter("Tags", typeof(string));
    
            var folderParameter = folder != null ?
                new ObjectParameter("Folder", folder) :
                new ObjectParameter("Folder", typeof(string));
    
            var selectedParameter = selected.HasValue ?
                new ObjectParameter("Selected", selected) :
                new ObjectParameter("Selected", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateJobAttachment", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter, jobAttachmentIdParameter, fileNameParameter, fileExtensionParameter, fileSizeParameter, fileParameter, groupTypeParameter, tagsParameter, folderParameter, selectedParameter);
        }
    
        public virtual int UpdateJobCopy(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID, Nullable<int> jOB_COPY_ID, Nullable<int> tYPE_ID, string title, Nullable<int> titleWordCount, string body, Nullable<int> bodyWordCount, string status)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            var jOB_COPY_IDParameter = jOB_COPY_ID.HasValue ?
                new ObjectParameter("JOB_COPY_ID", jOB_COPY_ID) :
                new ObjectParameter("JOB_COPY_ID", typeof(int));
    
            var tYPE_IDParameter = tYPE_ID.HasValue ?
                new ObjectParameter("TYPE_ID", tYPE_ID) :
                new ObjectParameter("TYPE_ID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var titleWordCountParameter = titleWordCount.HasValue ?
                new ObjectParameter("TitleWordCount", titleWordCount) :
                new ObjectParameter("TitleWordCount", typeof(int));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var bodyWordCountParameter = bodyWordCount.HasValue ?
                new ObjectParameter("BodyWordCount", bodyWordCount) :
                new ObjectParameter("BodyWordCount", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateJobCopy", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter, jOB_COPY_IDParameter, tYPE_IDParameter, titleParameter, titleWordCountParameter, bodyParameter, bodyWordCountParameter, statusParameter);
        }
    
        public virtual ObjectResult<SpGetAllUsers> SelectAllUsers(Nullable<int> orgId)
        {
            var orgIdParameter = orgId.HasValue ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetAllUsers>("SelectAllUsers", orgIdParameter);
        }
    
        public virtual ObjectResult<SpGetAllProduct> SelectAllProduct(Nullable<int> orgId)
        {
            var orgIdParameter = orgId.HasValue ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetAllProduct>("SelectAllProduct", orgIdParameter);
        }
    
        public virtual ObjectResult<TrackingJobs> SelectJobs(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID, string searchValue)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TrackingJobs>("SelectJobs", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter, searchValueParameter);
        }
    
        public virtual ObjectResult<GetCalenderUsers> GetCalenderUsers(Nullable<int> org_Id)
        {
            var org_IdParameter = org_Id.HasValue ?
                new ObjectParameter("Org_Id", org_Id) :
                new ObjectParameter("Org_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCalenderUsers>("GetCalenderUsers", org_IdParameter);
        }
    
        public virtual ObjectResult<GetUserProductCalendar> GetUserProductCalendar(Nullable<int> org_Id)
        {
            var org_IdParameter = org_Id.HasValue ?
                new ObjectParameter("Org_Id", org_Id) :
                new ObjectParameter("Org_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserProductCalendar>("GetUserProductCalendar", org_IdParameter);
        }
    
        public virtual ObjectResult<GetGroupCalendarUsers> GetGroupCalendarUsers(Nullable<int> org_Id, string userList)
        {
            var org_IdParameter = org_Id.HasValue ?
                new ObjectParameter("Org_Id", org_Id) :
                new ObjectParameter("Org_Id", typeof(int));
    
            var userListParameter = userList != null ?
                new ObjectParameter("UserList", userList) :
                new ObjectParameter("UserList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGroupCalendarUsers>("GetGroupCalendarUsers", org_IdParameter, userListParameter);
        }
    
        [EdmFunction("OrderMgntEntities", "SplitUserList")]
        public virtual IQueryable<SplitUserList_Result> SplitUserList(string list, string splitOn)
        {
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            var splitOnParameter = splitOn != null ?
                new ObjectParameter("SplitOn", splitOn) :
                new ObjectParameter("SplitOn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitUserList_Result>("[OrderMgntEntities].[SplitUserList](@List, @SplitOn)", listParameter, splitOnParameter);
        }
    
        public virtual ObjectResult<SelectJobAttachment> SelectJobAttachment(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectJobAttachment>("SelectJobAttachment", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter);
        }
    
        public virtual ObjectResult<SelectJobAttachments> SelectJobAttachments(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectJobAttachments>("SelectJobAttachments", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter);
        }
    
        public virtual ObjectResult<GetJobAttachments> GetJobAttachments(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID, Nullable<int> groupType, Nullable<int> job_Id, string tags)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            var groupTypeParameter = groupType.HasValue ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(int));
    
            var job_IdParameter = job_Id.HasValue ?
                new ObjectParameter("job_Id", job_Id) :
                new ObjectParameter("job_Id", typeof(int));
    
            var tagsParameter = tags != null ?
                new ObjectParameter("Tags", tags) :
                new ObjectParameter("Tags", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetJobAttachments>("GetJobAttachments", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter, groupTypeParameter, job_IdParameter, tagsParameter);
        }
    
        public virtual ObjectResult<SelectJobAttachmentTypes> SelectJobAttachmentTypes(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID, Nullable<int> productGroup_ID)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            var productGroup_IDParameter = productGroup_ID.HasValue ?
                new ObjectParameter("ProductGroup_ID", productGroup_ID) :
                new ObjectParameter("ProductGroup_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectJobAttachmentTypes>("SelectJobAttachmentTypes", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter, productGroup_IDParameter);
        }
    
        public virtual ObjectResult<GetAllEventException> GetAllEventException()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllEventException>("GetAllEventException");
        }
    
        public virtual int UpdateJobAttachmentSelected(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID, Nullable<int> jobAttachmentId, Nullable<bool> selected)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            var jobAttachmentIdParameter = jobAttachmentId.HasValue ?
                new ObjectParameter("JobAttachmentId", jobAttachmentId) :
                new ObjectParameter("JobAttachmentId", typeof(int));
    
            var selectedParameter = selected.HasValue ?
                new ObjectParameter("Selected", selected) :
                new ObjectParameter("Selected", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateJobAttachmentSelected", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter, jobAttachmentIdParameter, selectedParameter);
        }
    
        public virtual ObjectResult<SelectOrderableProducts> SelectOrderableProducts(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectOrderableProducts>("SelectOrderableProducts", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> InsertOrderItem(Nullable<int> orderId, string name, string clientPrice, string costPrice)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var clientPriceParameter = clientPrice != null ?
                new ObjectParameter("ClientPrice", clientPrice) :
                new ObjectParameter("ClientPrice", typeof(string));
    
            var costPriceParameter = costPrice != null ?
                new ObjectParameter("CostPrice", costPrice) :
                new ObjectParameter("CostPrice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("InsertOrderItem", orderIdParameter, nameParameter, clientPriceParameter, costPriceParameter);
        }
    
        public virtual int InsertWebContact(Nullable<int> company_Id, Nullable<int> order_Id, Nullable<int> user_Id, string first_Name, string last_Name, string email_Address, string phone_Number, string contactType)
        {
            var company_IdParameter = company_Id.HasValue ?
                new ObjectParameter("Company_Id", company_Id) :
                new ObjectParameter("Company_Id", typeof(int));
    
            var order_IdParameter = order_Id.HasValue ?
                new ObjectParameter("Order_Id", order_Id) :
                new ObjectParameter("Order_Id", typeof(int));
    
            var user_IdParameter = user_Id.HasValue ?
                new ObjectParameter("User_Id", user_Id) :
                new ObjectParameter("User_Id", typeof(int));
    
            var first_NameParameter = first_Name != null ?
                new ObjectParameter("First_Name", first_Name) :
                new ObjectParameter("First_Name", typeof(string));
    
            var last_NameParameter = last_Name != null ?
                new ObjectParameter("Last_Name", last_Name) :
                new ObjectParameter("Last_Name", typeof(string));
    
            var email_AddressParameter = email_Address != null ?
                new ObjectParameter("Email_Address", email_Address) :
                new ObjectParameter("Email_Address", typeof(string));
    
            var phone_NumberParameter = phone_Number != null ?
                new ObjectParameter("Phone_Number", phone_Number) :
                new ObjectParameter("Phone_Number", typeof(string));
    
            var contactTypeParameter = contactType != null ?
                new ObjectParameter("ContactType", contactType) :
                new ObjectParameter("ContactType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertWebContact", company_IdParameter, order_IdParameter, user_IdParameter, first_NameParameter, last_NameParameter, email_AddressParameter, phone_NumberParameter, contactTypeParameter);
        }
    
        public virtual ObjectResult<InsertWebOrder> InsertWebOrder(Nullable<int> org_Id, Nullable<int> orderType_Id, Nullable<int> orderId, Nullable<int> user_id, Nullable<int> property_Id, string comments, string options, string user_type, Nullable<System.DateTime> requiredDate, string description, Nullable<int> mail_Id, Nullable<int> company_id, string status, string keys)
        {
            var org_IdParameter = org_Id.HasValue ?
                new ObjectParameter("Org_Id", org_Id) :
                new ObjectParameter("Org_Id", typeof(int));
    
            var orderType_IdParameter = orderType_Id.HasValue ?
                new ObjectParameter("OrderType_Id", orderType_Id) :
                new ObjectParameter("OrderType_Id", typeof(int));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var property_IdParameter = property_Id.HasValue ?
                new ObjectParameter("Property_Id", property_Id) :
                new ObjectParameter("Property_Id", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var optionsParameter = options != null ?
                new ObjectParameter("Options", options) :
                new ObjectParameter("Options", typeof(string));
    
            var user_typeParameter = user_type != null ?
                new ObjectParameter("user_type", user_type) :
                new ObjectParameter("user_type", typeof(string));
    
            var requiredDateParameter = requiredDate.HasValue ?
                new ObjectParameter("RequiredDate", requiredDate) :
                new ObjectParameter("RequiredDate", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var mail_IdParameter = mail_Id.HasValue ?
                new ObjectParameter("Mail_Id", mail_Id) :
                new ObjectParameter("Mail_Id", typeof(int));
    
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var keysParameter = keys != null ?
                new ObjectParameter("Keys", keys) :
                new ObjectParameter("Keys", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertWebOrder>("InsertWebOrder", org_IdParameter, orderType_IdParameter, orderIdParameter, user_idParameter, property_IdParameter, commentsParameter, optionsParameter, user_typeParameter, requiredDateParameter, descriptionParameter, mail_IdParameter, company_idParameter, statusParameter, keysParameter);
        }
    
        public virtual ObjectResult<InsertWebProperty> InsertWebProperty(Nullable<int> org_Id, Nullable<int> user_Id, string address, string property_Id, string lat, string @long, Nullable<int> company_id)
        {
            var org_IdParameter = org_Id.HasValue ?
                new ObjectParameter("Org_Id", org_Id) :
                new ObjectParameter("Org_Id", typeof(int));
    
            var user_IdParameter = user_Id.HasValue ?
                new ObjectParameter("User_Id", user_Id) :
                new ObjectParameter("User_Id", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var property_IdParameter = property_Id != null ?
                new ObjectParameter("Property_Id", property_Id) :
                new ObjectParameter("Property_Id", typeof(string));
    
            var latParameter = lat != null ?
                new ObjectParameter("Lat", lat) :
                new ObjectParameter("Lat", typeof(string));
    
            var longParameter = @long != null ?
                new ObjectParameter("Long", @long) :
                new ObjectParameter("Long", typeof(string));
    
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertWebProperty>("InsertWebProperty", org_IdParameter, user_IdParameter, addressParameter, property_IdParameter, latParameter, longParameter, company_idParameter);
        }
    
        public virtual int InsertWebOrderItem(Nullable<int> org_Id, Nullable<int> order_Id, Nullable<int> user_id, Nullable<int> product_Id, Nullable<decimal> quantity, Nullable<decimal> price, Nullable<decimal> discount_Percent, string comments, string options, string user_type, Nullable<int> user_company_id)
        {
            var org_IdParameter = org_Id.HasValue ?
                new ObjectParameter("Org_Id", org_Id) :
                new ObjectParameter("Org_Id", typeof(int));
    
            var order_IdParameter = order_Id.HasValue ?
                new ObjectParameter("Order_Id", order_Id) :
                new ObjectParameter("Order_Id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var product_IdParameter = product_Id.HasValue ?
                new ObjectParameter("Product_Id", product_Id) :
                new ObjectParameter("Product_Id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(decimal));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var discount_PercentParameter = discount_Percent.HasValue ?
                new ObjectParameter("Discount_Percent", discount_Percent) :
                new ObjectParameter("Discount_Percent", typeof(decimal));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var optionsParameter = options != null ?
                new ObjectParameter("Options", options) :
                new ObjectParameter("Options", typeof(string));
    
            var user_typeParameter = user_type != null ?
                new ObjectParameter("user_type", user_type) :
                new ObjectParameter("user_type", typeof(string));
    
            var user_company_idParameter = user_company_id.HasValue ?
                new ObjectParameter("user_company_id", user_company_id) :
                new ObjectParameter("user_company_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertWebOrderItem", org_IdParameter, order_IdParameter, user_idParameter, product_IdParameter, quantityParameter, priceParameter, discount_PercentParameter, commentsParameter, optionsParameter, user_typeParameter, user_company_idParameter);
        }
    
        public virtual ObjectResult<SelectProductGroupOptions> SelectProductGroupOptions(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID, Nullable<int> pRODUCT_ROW_ID)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            var pRODUCT_ROW_IDParameter = pRODUCT_ROW_ID.HasValue ?
                new ObjectParameter("PRODUCT_ROW_ID", pRODUCT_ROW_ID) :
                new ObjectParameter("PRODUCT_ROW_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectProductGroupOptions>("SelectProductGroupOptions", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter, pRODUCT_ROW_IDParameter);
        }
    
        public virtual int InsertJob(Nullable<int> org_Id, Nullable<int> orderId, Nullable<int> user_id, Nullable<int> property_Id, Nullable<System.DateTime> requiredDate, Nullable<int> mail_Id, Nullable<int> company_id, string status, string keys, Nullable<int> adminId)
        {
            var org_IdParameter = org_Id.HasValue ?
                new ObjectParameter("Org_Id", org_Id) :
                new ObjectParameter("Org_Id", typeof(int));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var property_IdParameter = property_Id.HasValue ?
                new ObjectParameter("Property_Id", property_Id) :
                new ObjectParameter("Property_Id", typeof(int));
    
            var requiredDateParameter = requiredDate.HasValue ?
                new ObjectParameter("RequiredDate", requiredDate) :
                new ObjectParameter("RequiredDate", typeof(System.DateTime));
    
            var mail_IdParameter = mail_Id.HasValue ?
                new ObjectParameter("Mail_Id", mail_Id) :
                new ObjectParameter("Mail_Id", typeof(int));
    
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var keysParameter = keys != null ?
                new ObjectParameter("Keys", keys) :
                new ObjectParameter("Keys", typeof(string));
    
            var adminIdParameter = adminId.HasValue ?
                new ObjectParameter("AdminId", adminId) :
                new ObjectParameter("AdminId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertJob", org_IdParameter, orderIdParameter, user_idParameter, property_IdParameter, requiredDateParameter, mail_IdParameter, company_idParameter, statusParameter, keysParameter, adminIdParameter);
        }
    
        public virtual int InsertJobEvent(Nullable<int> org_Id, Nullable<int> job_Id, Nullable<int> user_id, Nullable<int> calendar_Id, Nullable<int> event_Id, Nullable<int> productGroup_Id, string status, string keys)
        {
            var org_IdParameter = org_Id.HasValue ?
                new ObjectParameter("Org_Id", org_Id) :
                new ObjectParameter("Org_Id", typeof(int));
    
            var job_IdParameter = job_Id.HasValue ?
                new ObjectParameter("Job_Id", job_Id) :
                new ObjectParameter("Job_Id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var calendar_IdParameter = calendar_Id.HasValue ?
                new ObjectParameter("Calendar_Id", calendar_Id) :
                new ObjectParameter("Calendar_Id", typeof(int));
    
            var event_IdParameter = event_Id.HasValue ?
                new ObjectParameter("Event_Id", event_Id) :
                new ObjectParameter("Event_Id", typeof(int));
    
            var productGroup_IdParameter = productGroup_Id.HasValue ?
                new ObjectParameter("ProductGroup_Id", productGroup_Id) :
                new ObjectParameter("ProductGroup_Id", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var keysParameter = keys != null ?
                new ObjectParameter("Keys", keys) :
                new ObjectParameter("Keys", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertJobEvent", org_IdParameter, job_IdParameter, user_idParameter, calendar_IdParameter, event_IdParameter, productGroup_IdParameter, statusParameter, keysParameter);
        }
    
        public virtual ObjectResult<GetStagingCalenderUsers> GetStagingCalenderUsers(Nullable<int> org_Id)
        {
            var org_IdParameter = org_Id.HasValue ?
                new ObjectParameter("Org_Id", org_Id) :
                new ObjectParameter("Org_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStagingCalenderUsers>("GetStagingCalenderUsers", org_IdParameter);
        }
    
        public virtual int DeleteJob(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID, Nullable<int> jOB_ID)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            var jOB_IDParameter = jOB_ID.HasValue ?
                new ObjectParameter("JOB_ID", jOB_ID) :
                new ObjectParameter("JOB_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteJob", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter, jOB_IDParameter);
        }
    
        public virtual int UpdateJobEvents(string eventId, string calendarName, string updatedByCalendarName, Nullable<int> oldEventRowId)
        {
            var eventIdParameter = eventId != null ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(string));
    
            var calendarNameParameter = calendarName != null ?
                new ObjectParameter("CalendarName", calendarName) :
                new ObjectParameter("CalendarName", typeof(string));
    
            var updatedByCalendarNameParameter = updatedByCalendarName != null ?
                new ObjectParameter("UpdatedByCalendarName", updatedByCalendarName) :
                new ObjectParameter("UpdatedByCalendarName", typeof(string));
    
            var oldEventRowIdParameter = oldEventRowId.HasValue ?
                new ObjectParameter("OldEventRowId", oldEventRowId) :
                new ObjectParameter("OldEventRowId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateJobEvents", eventIdParameter, calendarNameParameter, updatedByCalendarNameParameter, oldEventRowIdParameter);
        }
    
        public virtual ObjectResult<GetEventId> GetEventId(string eventId)
        {
            var eventIdParameter = eventId != null ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventId>("GetEventId", eventIdParameter);
        }
    
        public virtual ObjectResult<GetEventRowId> GetEventRowId(string eventId)
        {
            var eventIdParameter = eventId != null ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventRowId>("GetEventRowId", eventIdParameter);
        }
    
        public virtual int InsertEventslog(string event_Id, string event_Title, string operation, Nullable<int> user_Id, string source_calendar, string destination_calendar)
        {
            var event_IdParameter = event_Id != null ?
                new ObjectParameter("Event_Id", event_Id) :
                new ObjectParameter("Event_Id", typeof(string));
    
            var event_TitleParameter = event_Title != null ?
                new ObjectParameter("Event_Title", event_Title) :
                new ObjectParameter("Event_Title", typeof(string));
    
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var user_IdParameter = user_Id.HasValue ?
                new ObjectParameter("User_Id", user_Id) :
                new ObjectParameter("User_Id", typeof(int));
    
            var source_calendarParameter = source_calendar != null ?
                new ObjectParameter("Source_calendar", source_calendar) :
                new ObjectParameter("Source_calendar", typeof(string));
    
            var destination_calendarParameter = destination_calendar != null ?
                new ObjectParameter("Destination_calendar", destination_calendar) :
                new ObjectParameter("Destination_calendar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEventslog", event_IdParameter, event_TitleParameter, operationParameter, user_IdParameter, source_calendarParameter, destination_calendarParameter);
        }
    
        public virtual ObjectResult<SelectOrg> SelectOrg(string subdomain)
        {
            var subdomainParameter = subdomain != null ?
                new ObjectParameter("subdomain", subdomain) :
                new ObjectParameter("subdomain", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectOrg>("SelectOrg", subdomainParameter);
        }
    
        public virtual ObjectResult<GetEventDetails> GetEventDetails(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID, string eventId)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            var eventIdParameter = eventId != null ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventDetails>("GetEventDetails", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter, eventIdParameter);
        }
    
        public virtual int InsertEventMailToEmailInbox(string tO_EMAIL, string fROM_EMAIL, string cC_EMAIL, string bCC_EMAIL, string sUBJECT, string mESSAGE_BODY, Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID)
        {
            var tO_EMAILParameter = tO_EMAIL != null ?
                new ObjectParameter("TO_EMAIL", tO_EMAIL) :
                new ObjectParameter("TO_EMAIL", typeof(string));
    
            var fROM_EMAILParameter = fROM_EMAIL != null ?
                new ObjectParameter("FROM_EMAIL", fROM_EMAIL) :
                new ObjectParameter("FROM_EMAIL", typeof(string));
    
            var cC_EMAILParameter = cC_EMAIL != null ?
                new ObjectParameter("CC_EMAIL", cC_EMAIL) :
                new ObjectParameter("CC_EMAIL", typeof(string));
    
            var bCC_EMAILParameter = bCC_EMAIL != null ?
                new ObjectParameter("BCC_EMAIL", bCC_EMAIL) :
                new ObjectParameter("BCC_EMAIL", typeof(string));
    
            var sUBJECTParameter = sUBJECT != null ?
                new ObjectParameter("SUBJECT", sUBJECT) :
                new ObjectParameter("SUBJECT", typeof(string));
    
            var mESSAGE_BODYParameter = mESSAGE_BODY != null ?
                new ObjectParameter("MESSAGE_BODY", mESSAGE_BODY) :
                new ObjectParameter("MESSAGE_BODY", typeof(string));
    
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEventMailToEmailInbox", tO_EMAILParameter, fROM_EMAILParameter, cC_EMAILParameter, bCC_EMAILParameter, sUBJECTParameter, mESSAGE_BODYParameter, oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter);
        }
    
        public virtual ObjectResult<SelectCommunicationTemplates> SelectCommunicationTemplates(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID, string tEMPLATE_TYPE, Nullable<bool> pRINT, Nullable<bool> eMAIL)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            var tEMPLATE_TYPEParameter = tEMPLATE_TYPE != null ?
                new ObjectParameter("TEMPLATE_TYPE", tEMPLATE_TYPE) :
                new ObjectParameter("TEMPLATE_TYPE", typeof(string));
    
            var pRINTParameter = pRINT.HasValue ?
                new ObjectParameter("PRINT", pRINT) :
                new ObjectParameter("PRINT", typeof(bool));
    
            var eMAILParameter = eMAIL.HasValue ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCommunicationTemplates>("SelectCommunicationTemplates", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter, tEMPLATE_TYPEParameter, pRINTParameter, eMAILParameter);
        }
    
        public virtual ObjectResult<string> SelectEmailAddressAutoComplete(Nullable<int> oRG_ID, Nullable<int> uSER_ID, string uSER_TYPE, Nullable<int> uSER_COMPANY_ID, Nullable<int> eVENT_ROW_ID, string sEARCH_VALUE)
        {
            var oRG_IDParameter = oRG_ID.HasValue ?
                new ObjectParameter("ORG_ID", oRG_ID) :
                new ObjectParameter("ORG_ID", typeof(int));
    
            var uSER_IDParameter = uSER_ID.HasValue ?
                new ObjectParameter("USER_ID", uSER_ID) :
                new ObjectParameter("USER_ID", typeof(int));
    
            var uSER_TYPEParameter = uSER_TYPE != null ?
                new ObjectParameter("USER_TYPE", uSER_TYPE) :
                new ObjectParameter("USER_TYPE", typeof(string));
    
            var uSER_COMPANY_IDParameter = uSER_COMPANY_ID.HasValue ?
                new ObjectParameter("USER_COMPANY_ID", uSER_COMPANY_ID) :
                new ObjectParameter("USER_COMPANY_ID", typeof(int));
    
            var eVENT_ROW_IDParameter = eVENT_ROW_ID.HasValue ?
                new ObjectParameter("EVENT_ROW_ID", eVENT_ROW_ID) :
                new ObjectParameter("EVENT_ROW_ID", typeof(int));
    
            var sEARCH_VALUEParameter = sEARCH_VALUE != null ?
                new ObjectParameter("SEARCH_VALUE", sEARCH_VALUE) :
                new ObjectParameter("SEARCH_VALUE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SelectEmailAddressAutoComplete", oRG_IDParameter, uSER_IDParameter, uSER_TYPEParameter, uSER_COMPANY_IDParameter, eVENT_ROW_IDParameter, sEARCH_VALUEParameter);
        }
    
        public virtual int InsertEmailWebHooks(string parameter_Name, string @event, string recipient, string domain, string ip, string country, string region, string city, string user_agent, string device_type, string client_type, string client_name, string client_os, string campaign_id, string campaign_name, string tag, string url, string custom_variables, string token, string signature, string message_headers, string code, string error, string notification)
        {
            var parameter_NameParameter = parameter_Name != null ?
                new ObjectParameter("Parameter_Name", parameter_Name) :
                new ObjectParameter("Parameter_Name", typeof(string));
    
            var eventParameter = @event != null ?
                new ObjectParameter("event", @event) :
                new ObjectParameter("event", typeof(string));
    
            var recipientParameter = recipient != null ?
                new ObjectParameter("recipient", recipient) :
                new ObjectParameter("recipient", typeof(string));
    
            var domainParameter = domain != null ?
                new ObjectParameter("domain", domain) :
                new ObjectParameter("domain", typeof(string));
    
            var ipParameter = ip != null ?
                new ObjectParameter("ip", ip) :
                new ObjectParameter("ip", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("region", region) :
                new ObjectParameter("region", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var user_agentParameter = user_agent != null ?
                new ObjectParameter("user_agent", user_agent) :
                new ObjectParameter("user_agent", typeof(string));
    
            var device_typeParameter = device_type != null ?
                new ObjectParameter("device_type", device_type) :
                new ObjectParameter("device_type", typeof(string));
    
            var client_typeParameter = client_type != null ?
                new ObjectParameter("client_type", client_type) :
                new ObjectParameter("client_type", typeof(string));
    
            var client_nameParameter = client_name != null ?
                new ObjectParameter("client_name", client_name) :
                new ObjectParameter("client_name", typeof(string));
    
            var client_osParameter = client_os != null ?
                new ObjectParameter("client_os", client_os) :
                new ObjectParameter("client_os", typeof(string));
    
            var campaign_idParameter = campaign_id != null ?
                new ObjectParameter("campaign_id", campaign_id) :
                new ObjectParameter("campaign_id", typeof(string));
    
            var campaign_nameParameter = campaign_name != null ?
                new ObjectParameter("campaign_name", campaign_name) :
                new ObjectParameter("campaign_name", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("tag", tag) :
                new ObjectParameter("tag", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            var custom_variablesParameter = custom_variables != null ?
                new ObjectParameter("custom_variables", custom_variables) :
                new ObjectParameter("custom_variables", typeof(string));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var signatureParameter = signature != null ?
                new ObjectParameter("signature", signature) :
                new ObjectParameter("signature", typeof(string));
    
            var message_headersParameter = message_headers != null ?
                new ObjectParameter("message_headers", message_headers) :
                new ObjectParameter("message_headers", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var errorParameter = error != null ?
                new ObjectParameter("error", error) :
                new ObjectParameter("error", typeof(string));
    
            var notificationParameter = notification != null ?
                new ObjectParameter("notification", notification) :
                new ObjectParameter("notification", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEmailWebHooks", parameter_NameParameter, eventParameter, recipientParameter, domainParameter, ipParameter, countryParameter, regionParameter, cityParameter, user_agentParameter, device_typeParameter, client_typeParameter, client_nameParameter, client_osParameter, campaign_idParameter, campaign_nameParameter, tagParameter, urlParameter, custom_variablesParameter, tokenParameter, signatureParameter, message_headersParameter, codeParameter, errorParameter, notificationParameter);
        }
    }
}
